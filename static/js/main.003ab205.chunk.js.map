{"version":3,"sources":["assets/pizza.png","assets/japones.jpg","logo.svg","Italia.js","Carta.js","Inici.js","Cistella.js","Navegacio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Italia","Typography","align","variant","src","pizza","images","file","title","japones","buttonItemMenu","makeStyles","theme","root","display","flexWrap","minWidth","width","image","position","height","marginTop","marginBot","zIndex","opacity","border","focusVisible","imageButton","alignItems","justifyContent","color","palette","common","white","imageSrc","left","right","top","bottom","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","spacing","imageMarked","Carta","classes","map","ButtonBase","focusRipple","key","className","focusVisibleClassName","style","backgroundImage","Inici","Cistella","buttonCartaStyles","secondary","main","primary","light","borderRadius","maxWidth","selected","buttonStyles","bottomNavStyles","Navegacio","cartaClasses","buttonClasses","navClasses","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","icon","HomeRounded","component","Link","to","label","RestaurantMenuRounded","ShoppingCart","darkTheme","createMuiTheme","background","paper","default","useStyles","content","minHeight","App","ThemeProvider","AppBar","Toolbar","Container","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.003ab205.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza.45073c80.png\";","module.exports = __webpack_public_path__ + \"static/media/japones.95279286.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport pizza from \"./assets/pizza.png\";\r\n\r\nexport default function Italia() {\r\n  return (\r\n    <div>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n            Italia\r\n        </Typography>\r\n\r\n        <img src={pizza}>\r\n\r\n        </img>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  makeStyles,\r\n  ButtonBase,\r\n  Container,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link, Switch, Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Italia from \"./Italia\";\r\n\r\nimport pizza from \"./assets/pizza.png\";\r\n\r\nimport japones from \"./assets/japones.jpg\"\r\n// LINK PER PODER ENTENDRE AIXÔ:\r\n// https://material-ui.com/components/buttons/\r\n\r\nconst images = [\r\n  {\r\n    file: pizza,\r\n    title: \"Italià\"\r\n  },\r\n  {\r\n    file: japones,\r\n    title: \"Japonés\"\r\n  }\r\n];\r\n\r\nconst buttonItemMenu = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    minWidth: 300,\r\n    width: '100%',\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 200,\r\n    width: '90%',\r\n    marginTop: '40px',\r\n    marginBot: '20px',\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\n\r\nexport default function Carta() {\r\n  const classes = buttonItemMenu();\r\n\r\n  return (\r\n    \r\n    <div align=\"center\">\r\n      {images.map(image =>(\r\n        <ButtonBase\r\n        focusRipple\r\n        key={image.title}\r\n        className={classes.image}\r\n        focusVisibleClassName={classes.focusVisible}\r\n      >\r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: `url(${image.file})`,\r\n            }}\r\n          />\r\n          <span className={classes.imageBackdrop} />\r\n          <span className={classes.imageButton}>\r\n            <Typography\r\n              variant=\"h2\"\r\n              color=\"inherit\"\r\n              className={classes.imageTitle}>\r\n\r\n              {image.title}\r\n              <span className={classes.imageMarked} />\r\n            </Typography>\r\n          </span>\r\n        </ButtonBase>\r\n      ))}\r\n    </div>  \r\n      \r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default function Inici(){\r\n    return(\r\n        <Typography align=\"center\" variant=\"h5\">\r\n            Benvingut a YourMeal  \r\n        </Typography>\r\n    );\r\n}","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport pizza from \"./assets/pizza.png\";\r\n\r\nexport default function Cistella() {\r\n  return (\r\n    <div>\r\n      <Typography align=\"center\" variant=\"h5\">\r\n        Cistella\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  ShoppingCart,\r\n  HomeRounded,\r\n  RestaurantMenuRounded\r\n} from \"@material-ui/icons/\";\r\n\r\nconst buttonCartaStyles = makeStyles(theme => ({\r\n  //style pel boto carta\r\n  // NOTA: per fer-lo rodó s'ha de fer:\r\n  // borderRadius = 2*width = 2*height =\r\n  root: {\r\n    color: theme.palette.secondary.main,\r\n    \"&$selected\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n      color: theme.palette.secondary.main\r\n    },\r\n    backgroundColor: theme.palette.primary.main,\r\n    borderRadius: \"50%\",\r\n    top: \"-35px\",\r\n    maxWidth: \"0\",\r\n    height: \"130%\"\r\n  },\r\n  selected: {}\r\n}));\r\n\r\nconst buttonStyles = makeStyles(theme => ({\r\n  //style pels altres botons\r\n  root: {\r\n    color: theme.palette.secondary.light,\r\n    \"&$selected\": {\r\n      color: \"white\"\r\n    }\r\n  },\r\n  selected: {}\r\n}));\r\n\r\nconst bottomNavStyles = makeStyles(theme => ({\r\n  //style per la navigation\r\n  root: {\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.secondary.main\r\n  }\r\n}));\r\n\r\nexport default function Navegacio() {\r\n  const cartaClasses = buttonCartaStyles();\r\n  const buttonClasses = buttonStyles();\r\n  const navClasses = bottomNavStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={navClasses.root}\r\n    >\r\n      <BottomNavigationAction\r\n        classes={buttonClasses}\r\n        icon={<HomeRounded />}\r\n        component={Link}\r\n        to=\"/fhc6/\"\r\n      />\r\n      <BottomNavigationAction\r\n        classes={cartaClasses}\r\n        label=\"Carta\"\r\n        icon={<RestaurantMenuRounded />}\r\n        component={Link}\r\n        to=\"/fhc6/carta\"\r\n      />\r\n      <BottomNavigationAction\r\n        classes={buttonClasses}\r\n        icon={<ShoppingCart />}\r\n        component={Link}\r\n        to=\"/fhc6/cistella\"\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport logo from \"./logo.svg\";\r\nimport { AppBar, Toolbar, Container, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport \"./App.css\";\r\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\r\nimport Carta from \"./Carta\";\r\nimport Inici from \"./Inici\";\r\nimport Cistella from \"./Cistella\";\r\nimport Navegacio from \"./Navegacio\";\r\nimport Italia from \"./Italia\";\r\n\r\n//TEMA DE LA APP\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#80d6d1\"\r\n    },\r\n    secondary: {\r\n      main: \"#303030\"\r\n    },\r\n    background: {\r\n      paper: \"#e5e5e5\",\r\n      default: \"#e5e5e5\"\r\n    }\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    backgroundColor: theme.palette.background.default,\r\n    minHeight: \"90vh\"\r\n  }\r\n}));\r\n\r\n//Estils navegacio\r\nconst buttonCartaStyles = makeStyles(theme => ({\r\n  //style pel boto carta\r\n  root: {\r\n    color: theme.palette.secondary.main,\r\n    \"&$selected\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n      color: theme.palette.secondary.main\r\n    },\r\n    backgroundColor: theme.palette.primary.main,\r\n    borderRadius: \"50%\",\r\n    top: \"-35px\",\r\n    maxWidth: \"0\",\r\n    height: \"130%\"\r\n  },\r\n  selected: {}\r\n}));\r\nconst buttonStyles = makeStyles(theme => ({\r\n  //style pels altres botons\r\n  root: {\r\n    color: theme.palette.secondary.light,\r\n    \"&$selected\": {\r\n      color: \"white\"\r\n    }\r\n  },\r\n  selected: {}\r\n}));\r\nconst bottomNavStyles = makeStyles(theme => ({\r\n  //style per la navigation\r\n  root: {\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.secondary.main\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div>\r\n        <AppBar position=\"static\" color=\"secondary\">\r\n          <Toolbar>\r\n            <Typography align=\"left\" variant=\"h5\" className={classes.title}>\r\n              YourMeal\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n\r\n      <BrowserRouter>\r\n        <Container className={classes.content}>\r\n          <Switch>\r\n            <Route path=\"/fhc6/\" exact>\r\n              <Inici />\r\n            </Route>\r\n            <Route path=\"/fhc6/carta\">\r\n              <Carta />\r\n            </Route>\r\n            <Route path=\"/fhc6/cistella\">\r\n              <Cistella />\r\n            </Route>\r\n            <Route path=\"/fhc6/italia\">\r\n              <Italia />\r\n            </Route>\r\n          </Switch>\r\n        </Container>\r\n\r\n        <Navegacio />\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}